coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game)) +
theme(plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 11, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 8),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 11),
axis.title.y = element_text(face = "bold", size = 11),
axis.text.y = element_text(color = "grey20", face = "bold", size = 9),
axis.text.x = element_text(face = "bold", size = 8),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"),values = c("#FFD700", "#FF8C00"))
strict_refs_long %>%
ggplot(aes(x = reorder(Referee, +count), y = count, fill = card_metric)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_text(aes(label = format(count, digits = 2)),
position = position_dodge(width = 0.7), hjust = 1,
size = 3, color = "black") +
coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
#  geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game),) +
theme(plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 11, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 8),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 11),
axis.title.y = element_text(face = "bold", size = 11),
axis.text.y = element_text(color = "grey20", face = "bold", size = 9),
axis.text.x = element_text(face = "bold", size = 8),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"),values = c("#FFD700", "#FF8C00"))
strict_refs_long %>%
ggplot(aes(x = reorder(Referee, +count), y = count, fill = card_metric)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_text(aes(label = format(count, digits = 2)),
position = position_dodge(width = 0.7), hjust = 1,
size = 3, color = "black") +
coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
#  geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game),) +
theme(plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 11, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 9),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 11),
axis.title.y = element_text(face = "bold", size = 11),
axis.text.y = element_text(color = "grey20", face = "bold", size = 9),
axis.text.x = element_text(face = "bold", size = 8),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"),values = c("#FFD700", "#FF8C00"))
strict_refs_plotting %>%
ggplot(aes(x = home_yellows_per_game, y = away_yellows_per_game)) +
geom_point()
strict_refs_plotting %>%
ggplot(aes(x = home_yellows_per_game, y = away_yellows_per_game)) +
geom_point(aes(color = Referree))
View(strict_refs_plotting)
strict_refs_plotting %>%
ggplot(aes(x = home_yellows_per_game, y = away_yellows_per_game)) +
geom_point(aes(color = Referee))
strict_refs_long %>%
ggplot(aes(x = reorder(Referee, +count), y = count, fill = card_metric)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_text(aes(label = format(count, digits = 2)),
position = position_dodge(width = 0.7), hjust = 1,
size = 3, color = "black") +
coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
#  geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game),) +
theme(plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 11, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 9),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 11),
axis.title.y = element_text(face = "bold", size = 11),
axis.text.y = element_text(color = "grey20", face = "bold", size = 9),
axis.text.x = element_text(face = "bold", size = 8),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"),values = c("#FFD700", "#FF8C00"))
ggsave("fig_output/yellows_home_away.png", ref_yellow_plot, width = 15, height = 10)
ref_yellow_plot <- strict_refs_long %>%
ggplot(aes(x = reorder(Referee, +count), y = count, fill = card_metric)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_text(aes(label = format(count, digits = 2)),
position = position_dodge(width = 0.7), hjust = 1,
size = 3, color = "black") +
coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
#  geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game),) +
theme(plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 11, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 9),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 11),
axis.title.y = element_text(face = "bold", size = 11),
axis.text.y = element_text(color = "grey20", face = "bold", size = 9),
axis.text.x = element_text(face = "bold", size = 8),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"),values = c("#FFD700", "#FF8C00"))
ref_yellow_plot
ggsave("fig_output/yellows_home_away.png", ref_yellow_plot, width = 15, height = 10)
ref_yellow_plot <- strict_refs_long %>%
ggplot(aes(x = reorder(Referee, +count), y = count, fill = card_metric)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_text(aes(label = format(count, digits = 2)),
position = position_dodge(width = 0.7), hjust = 1,
size = 3.5, color = "black") +
coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
#  geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game),) +
theme(plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 11, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 9),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 11),
axis.title.y = element_text(face = "bold", size = 11),
axis.text.y = element_text(color = "grey20", face = "bold", size = 10),
axis.text.x = element_text(face = "bold", size = 8),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"),values = c("#FFD700", "#FF8C00"))
ref_yellow_plot
ref_yellow_plot <- strict_refs_long %>%
ggplot(aes(x = reorder(Referee, +count), y = count, fill = card_metric)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_text(aes(label = format(count, digits = 2)),
position = position_dodge(width = 0.7), hjust = 1,
size = 3.5, color = "black") +
coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
#  geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game),) +
theme(plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 11, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 9),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 11),
axis.text.y = element_text(color = "grey20", face = "bold", size = 11),
axis.text.x = element_text(face = "bold", size = 8),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"),values = c("#FFD700", "#FF8C00"))
ref_yellow_plot
ref_yellow_plot <- strict_refs_long %>%
ggplot(aes(x = reorder(Referee, +count), y = count, fill = card_metric)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_text(aes(label = format(count, digits = 2)),
position = position_dodge(width = 0.7), hjust = 1,
size = 3.5, color = "black") +
coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
#  geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game),) +
theme(plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 11, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 9),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 14),
axis.title.y = element_text(face = "bold", size = 11),
axis.text.y = element_text(color = "grey20", face = "bold", size = 11),
axis.text.x = element_text(face = "bold", size = 8),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"),values = c("#FFD700", "#FF8C00"))
ref_yellow_plot
ref_yellow_plot <- strict_refs_long %>%
ggplot(aes(x = reorder(Referee, +count), y = count, fill = card_metric)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_text(aes(label = format(count, digits = 2)),
position = position_dodge(width = 0.7), hjust = 1,
size = 3.5, color = "black") +
coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
#  geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game),) +
theme(plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 11, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 9),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 14),
axis.title.y = element_text(face = "bold", size = 13),
axis.text.y = element_text(color = "grey20", face = "bold", size = 12),
axis.text.x = element_text(face = "bold", size = 8),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"),values = c("#FFD700", "#FF8C00"))
ref_yellow_plot
ref_yellow_plot <- strict_refs_long %>%
ggplot(aes(x = reorder(Referee, +count), y = count, fill = card_metric)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_text(aes(label = format(count, digits = 2)),
position = position_dodge(width = 0.7), hjust = 1,
size = 3.5, color = "black") +
coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
#  geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game),) +
theme(plot.title = element_text(size = 14, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 11, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 9),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 14),
axis.title.y = element_text(face = "bold", size = 11),
axis.text.y = element_text(color = "grey20", face = "bold", size = 12),
axis.text.x = element_text(face = "bold", size = 8),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"),values = c("#FFD700", "#FF8C00"))
ref_yellow_plot <- strict_refs_long %>%
ggplot(aes(x = reorder(Referee, +count), y = count, fill = card_metric)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_text(aes(label = format(count, digits = 2)),
position = position_dodge(width = 0.7), hjust = 1,
size = 3.5, color = "black") +
coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
#  geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game),) +
theme(plot.title = element_text(size = 14, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 11, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 9),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 14),
axis.title.y = element_text(face = "bold", size = 11),
axis.text.y = element_text(color = "grey20", face = "bold", size = 12),
axis.text.x = element_text(face = "bold", size = 8),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"),values = c("#FFD700", "#FF8C00"))
ref_yellow_plot <- strict_refs_long %>%
ggplot(aes(x = reorder(Referee, +count), y = count, fill = card_metric)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_text(aes(label = format(count, digits = 2)),
position = position_dodge(width = 0.7), hjust = 1,
size = 3.5, color = "black") +
coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
#  geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game),) +
theme(plot.title = element_text(size = 14, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 11, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 9),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 14),
axis.title.y = element_text(face = "bold", size = 11),
axis.text.y = element_text(color = "grey20", face = "bold", size = 12),
axis.text.x = element_text(face = "bold", size = 8),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"),values = c("#FFD700", "#FF8C00"))
ref_yellow_plot <- strict_refs_long %>%
ggplot(aes(x = reorder(Referee, +count), y = count, fill = card_metric)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_text(aes(label = format(count, digits = 2)),
position = position_dodge(width = 0.7), hjust = 1,
size = 3.5, color = "black") +
coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
#  geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game),) +
theme(plot.title = element_text(size = 14, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 11, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 9),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 14),
axis.title.y = element_text(face = "bold", size = 11),
axis.text.y = element_text(color = "grey20", face = "bold", size = 12),
axis.text.x = element_text(face = "bold", size = 8),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"),values = c("#FFD700", "#FF8C00"))
ref_yellow_plot <- strict_refs_long %>%
ggplot(aes(x = reorder(Referee, +count), y = count, fill = card_metric)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_text(aes(label = format(count, digits = 2)),
position = position_dodge(width = 0.7), hjust = 1,
size = 3.5, color = "black") +
coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
#  geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game),) +
theme(plot.title = element_text(size = 14, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 11, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 9),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 14),
axis.title.y = element_text(face = "bold", size = 11),
axis.text.y = element_text(color = "grey20", face = "bold", size = 12),
axis.text.x = element_text(face = "bold", size = 8),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"),values = c("#FFD700", "#FF8C00"))
ref_yellow_plot
ref_yellow_plot <- strict_refs_long %>%
ggplot(aes(x = reorder(Referee, +count), y = count, fill = card_metric)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_text(aes(label = format(count, digits = 2)),
position = position_dodge(width = 0.7), hjust = 1,
size = 4, color = "black") +
coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
#  geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game),) +
theme(plot.title = element_text(size = 14, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 11, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 9),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 12),
axis.text.y = element_text(color = "grey20", face = "bold", size = 12),
axis.text.x = element_text(face = "bold", size = 8),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"),values = c("#FFD700", "#FF8C00"))
ref_yellow_plot
ref_yellow_plot <- strict_refs_long %>%
ggplot(aes(x = reorder(Referee, +count), y = count, fill = card_metric)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_text(aes(label = format(count, digits = 2)),
position = position_dodge(width = 0.7), hjust = 1,
size = 4, color = "black") +
coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
#  geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game),) +
theme(plot.title = element_text(size = 14, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 11, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 9),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 13),
axis.title.y = element_text(face = "bold", size = 13),
axis.text.y = element_text(color = "grey20", face = "bold", size = 12),
axis.text.x = element_text(face = "bold", size = 10),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"),values = c("#FFD700", "#FF8C00"))
ref_yellow_plot
ref_yellow_plot <- strict_refs_long %>%
ggplot(aes(x = reorder(Referee, +count), y = count, fill = card_metric)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_text(aes(label = format(count, digits = 2)),
position = position_dodge(width = 0.7), hjust = 1,
size = 4, color = "black") +
coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
#  geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game),) +
theme(plot.title = element_text(size = 16, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 11, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 9),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 13),
axis.title.y = element_text(face = "bold", size = 13),
axis.text.y = element_text(color = "grey20", face = "bold", size = 12),
axis.text.x = element_text(face = "bold", size = 10),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"),values = c("#FFD700", "#FF8C00"))
ref_yellow_plot
ref_yellow_plot <- strict_refs_long %>%
ggplot(aes(x = reorder(Referee, +count), y = count, fill = card_metric)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_text(aes(label = format(count, digits = 2)),
position = position_dodge(width = 0.7), hjust = 1,
size = 4, color = "black") +
coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
#  geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game),) +
theme(plot.title = element_text(size = 16, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 13, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 9),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 13),
axis.title.y = element_text(face = "bold", size = 13),
axis.text.y = element_text(color = "grey20", face = "bold", size = 12),
axis.text.x = element_text(face = "bold", size = 10),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"),values = c("#FFD700", "#FF8C00"))
ref_yellow_plot
ref_yellow_plot <- strict_refs_long %>%
ggplot(aes(x = reorder(Referee, +count), y = count, fill = card_metric)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_text(aes(label = format(count, digits = 2)),
position = position_dodge(width = 0.7), hjust = 1,
size = 4, color = "black") +
coord_flip() +
labs(title = "Average number of yellow cards that each Premier League referees showed to home and away teams",
subtitle = "2021/2022 English Premier League Season",
x = "Referee",
y = "Number of yellow cards given per game",
caption = "Minimum number of games refereed =  10 games") +
#  geom_hline(yintercept = mean(strict_refs_plotting$home_yellows_per_game),) +
theme(plot.title = element_text(size = 16, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 13, face = "italic", hjust = 0.5),
plot.caption = element_text(hjust = 0.5, size = 10),
panel.background = element_rect(fill = NA),
#panel.grid.major = element_blank(),
axis.title.x = element_text(color = "grey20",face = "bold", size = 13),
axis.title.y = element_text(face = "bold", size = 13),
axis.text.y = element_text(color = "grey20", face = "bold", size = 12),
axis.text.x = element_text(face = "bold", size = 10),
legend.position = "bottom") +
labs(fill = "") +
scale_y_continuous(limits = c(0,2.5)) +
scale_fill_manual(labels = c("Away team", "Home Team"), values = c("#FFD700", "#FF8C00"))
ref_yellow_plot
ggsave("fig_output/yellows_home_away.png", ref_yellow_plot, width = 15, height = 10)
